{"version":3,"sources":["public/src/modules/notifications.js"],"names":["define","sounds","translator","components","Notifications","unreadNotifs","prepareDOM","notifContainer","get","notifTrigger","children","notifList","notifIcon","on","e","preventDefault","hasClass","loadNotifications","unread","$","this","nid","attr","socket","emit","err","app","alertError","message","incrementNotifCount","markAllRead","liEl","parent","toggleClass","delta","count","parseInt","updateNotifCount","notifData","payload","alert_id","title","timeout","path","bodyShort","type","clickfn","startsWith","window","location","href","protocol","host","config","relative_path","alert","refreshTitle","ajaxify","currentPage","refresh","play","data","notifs","concat","read","sort","a","b","datetime","toggleTimeagoShorthand","i","length","timeago","Date","templates","parse","notifications","html","translateHtml","Math","max","removeClass","addClass","updateFavicon","trigger","Tinycon","setBubble"],"mappings":"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","file":"public/src/modules/notifications.js","sourcesContent":["'use strict';\n\n\ndefine('notifications', ['sounds', 'translator', 'components'], function (sounds, translator, components) {\n\tvar Notifications = {};\n\n\tvar unreadNotifs = {};\n\n\tNotifications.prepareDOM = function () {\n\t\tvar notifContainer = components.get('notifications');\n\t\tvar notifTrigger = notifContainer.children('a');\n\t\tvar notifList = components.get('notifications/list');\n\t\tvar notifIcon = components.get('notifications/icon');\n\n\t\tnotifTrigger\n\t\t\t.on('click', function (e) {\n\t\t\t\te.preventDefault();\n\t\t\t\tif (notifContainer.hasClass('open')) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tNotifications.loadNotifications(notifList);\n\t\t\t});\n\n\t\tnotifList.on('click', '[data-nid]', function () {\n\t\t\tvar unread = $(this).hasClass('unread');\n\t\t\tvar nid = $(this).attr('data-nid');\n\t\t\tif (!unread) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tsocket.emit('notifications.markRead', nid, function (err) {\n\t\t\t\tif (err) {\n\t\t\t\t\treturn app.alertError(err.message);\n\t\t\t\t}\n\t\t\t\tincrementNotifCount(-1);\n\t\t\t\tif (unreadNotifs[nid]) {\n\t\t\t\t\tdelete unreadNotifs[nid];\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\tnotifContainer.on('click', '.mark-all-read', Notifications.markAllRead);\n\n\t\tnotifList.on('click', '.mark-read', function () {\n\t\t\tvar liEl = $(this).parent();\n\t\t\tvar unread = liEl.hasClass('unread');\n\t\t\tvar nid = liEl.attr('data-nid');\n\n\t\t\tsocket.emit('notifications.mark' + (unread ? 'Read' : 'Unread'), nid, function (err) {\n\t\t\t\tif (err) {\n\t\t\t\t\treturn app.alertError(err.message);\n\t\t\t\t}\n\n\t\t\t\tliEl.toggleClass('unread');\n\t\t\t\tincrementNotifCount(unread ? -1 : 1);\n\t\t\t\tif (unread && unreadNotifs[nid]) {\n\t\t\t\t\tdelete unreadNotifs[nid];\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn false;\n\t\t});\n\n\t\tfunction incrementNotifCount(delta) {\n\t\t\tvar count = parseInt(notifIcon.attr('data-content'), 10) + delta;\n\t\t\tNotifications.updateNotifCount(count);\n\t\t}\n\n\t\tsocket.on('event:new_notification', function (notifData) {\n\t\t\t// If a path is defined, show notif data, otherwise show generic data\n\t\t\tvar payload = {\n\t\t\t\talert_id: 'new_notif',\n\t\t\t\ttitle: '[[notifications:new_notification]]',\n\t\t\t\ttimeout: 2000,\n\t\t\t};\n\n\t\t\tif (notifData.path) {\n\t\t\t\tpayload.message = notifData.bodyShort;\n\t\t\t\tpayload.type = 'info';\n\t\t\t\tpayload.clickfn = function () {\n\t\t\t\t\tif (notifData.path.startsWith('http') && notifData.path.startsWith('https')) {\n\t\t\t\t\t\twindow.location.href = notifData.path;\n\t\t\t\t\t} else {\n\t\t\t\t\t\twindow.location.href = window.location.protocol + '//' + window.location.host + config.relative_path + notifData.path;\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tpayload.message = '[[notifications:you_have_unread_notifications]]';\n\t\t\t\tpayload.type = 'warning';\n\t\t\t}\n\n\t\t\tapp.alert(payload);\n\t\t\tapp.refreshTitle();\n\n\t\t\tif (ajaxify.currentPage === 'notifications') {\n\t\t\t\tajaxify.refresh();\n\t\t\t}\n\n\t\t\tsocket.emit('notifications.getCount', function (err, count) {\n\t\t\t\tif (err) {\n\t\t\t\t\treturn app.alertError(err.message);\n\t\t\t\t}\n\n\t\t\t\tNotifications.updateNotifCount(count);\n\t\t\t});\n\n\t\t\tif (!unreadNotifs[notifData.nid]) {\n\t\t\t\tsounds.play('notification', notifData.nid);\n\t\t\t\tunreadNotifs[notifData.nid] = true;\n\t\t\t}\n\t\t});\n\n\t\tsocket.on('event:notifications.updateCount', function (count) {\n\t\t\tNotifications.updateNotifCount(count);\n\t\t});\n\t};\n\n\tNotifications.loadNotifications = function (notifList) {\n\t\tsocket.emit('notifications.get', null, function (err, data) {\n\t\t\tif (err) {\n\t\t\t\treturn app.alertError(err.message);\n\t\t\t}\n\n\t\t\tvar notifs = data.unread.concat(data.read).sort(function (a, b) {\n\t\t\t\treturn parseInt(a.datetime, 10) > parseInt(b.datetime, 10) ? -1 : 1;\n\t\t\t});\n\n\t\t\ttranslator.toggleTimeagoShorthand();\n\t\t\tfor (var i = 0; i < notifs.length; i += 1) {\n\t\t\t\tnotifs[i].timeago = $.timeago(new Date(parseInt(notifs[i].datetime, 10)));\n\t\t\t}\n\t\t\ttranslator.toggleTimeagoShorthand();\n\n\t\t\ttemplates.parse('partials/notifications_list', { notifications: notifs }, function (html) {\n\t\t\t\tnotifList.translateHtml(html);\n\t\t\t});\n\t\t});\n\t};\n\n\tNotifications.updateNotifCount = function (count) {\n\t\tvar notifIcon = components.get('notifications/icon');\n\t\tcount = Math.max(0, count);\n\t\tif (count > 0) {\n\t\t\tnotifIcon.removeClass('fa-bell-o').addClass('fa-bell');\n\t\t} else {\n\t\t\tnotifIcon.removeClass('fa-bell').addClass('fa-bell-o');\n\t\t}\n\n\t\tnotifIcon.toggleClass('unread-count', count > 0);\n\t\tnotifIcon.attr('data-content', count > 99 ? '99+' : count);\n\n\t\tvar payload = {\n\t\t\tcount: count,\n\t\t\tupdateFavicon: true,\n\t\t};\n\t\t$(window).trigger('action:notification.updateCount', payload);\n\n\t\tif (payload.updateFavicon) {\n\t\t\tTinycon.setBubble(count > 99 ? '99+' : count);\n\t\t}\n\t};\n\n\tNotifications.markAllRead = function () {\n\t\tsocket.emit('notifications.markAllRead', function (err) {\n\t\t\tif (err) {\n\t\t\t\tapp.alertError(err.message);\n\t\t\t}\n\t\t\tNotifications.updateNotifCount(0);\n\t\t\tunreadNotifs = {};\n\t\t});\n\t};\n\n\treturn Notifications;\n});\n"]}